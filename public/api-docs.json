{
  "info": {
    "title": "Bloggo Public API",
    "version": "1.0.0",
    "description": "Headless CMS API for external blog frontends. All endpoints require the x-trusted-frontend header for authentication."
  },
  "baseUrl": "/api",
  "authentication": {
    "type": "header",
    "header": "x-trusted-frontend",
    "description": "All API endpoints require a trusted frontend key passed via the x-trusted-frontend header"
  },
  "endpoints": [
    {
      "path": "/posts",
      "method": "GET",
      "tag": "Posts",
      "summary": "List published posts",
      "description": "Retrieve a paginated list of published blog posts with optional filtering",
      "parameters": [
        {
          "name": "page",
          "in": "query",
          "type": "integer",
          "required": false,
          "default": 1,
          "description": "Page number for pagination"
        },
        {
          "name": "limit",
          "in": "query",
          "type": "integer",
          "required": false,
          "default": 12,
          "description": "Number of items per page (max: 100)"
        },
        {
          "name": "category",
          "in": "query",
          "type": "string",
          "required": false,
          "description": "Filter by category slug"
        },
        {
          "name": "tag",
          "in": "query",
          "type": "string",
          "required": false,
          "description": "Filter by tag slug"
        },
        {
          "name": "author",
          "in": "query",
          "type": "string",
          "required": false,
          "description": "Filter by author ID"
        },
        {
          "name": "search",
          "in": "query",
          "type": "string",
          "required": false,
          "description": "Search in title, content, and spot"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "data": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": { "type": "string", "example": "my-first-post" },
                    "title": { "type": "string", "example": "My First Post" },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "example": "A brief description"
                    },
                    "spot": {
                      "type": "string",
                      "nullable": true,
                      "example": "Short tagline"
                    },
                    "coverImage": {
                      "type": "string",
                      "nullable": true,
                      "example": "/uploads/cover/image"
                    },
                    "readCount": { "type": "integer", "example": 150 },
                    "readTime": { "type": "integer", "example": 5 },
                    "publishedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-15T10:00:00Z"
                    },
                    "author": {
                      "type": "object",
                      "properties": {
                        "id": { "type": "integer", "example": 1 },
                        "name": { "type": "string", "example": "John Doe" },
                        "avatar": {
                          "type": "string",
                          "nullable": true,
                          "example": "/uploads/avatar/1_abc123"
                        }
                      }
                    },
                    "category": {
                      "type": "object",
                      "properties": {
                        "slug": { "type": "string", "example": "technology" },
                        "name": { "type": "string", "example": "Technology" }
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "slug": { "type": "string", "example": "go" },
                          "name": { "type": "string", "example": "Go" }
                        }
                      }
                    }
                  }
                }
              },
              "page": { "type": "integer", "example": 1 },
              "take": { "type": "integer", "example": 12 },
              "total": { "type": "integer", "example": 42 }
            }
          }
        },
        "401": {
          "description": "Unauthorized - Missing or invalid x-trusted-frontend header"
        }
      }
    },
    {
      "path": "/posts/{slug}",
      "method": "GET",
      "tag": "Posts",
      "summary": "Get post by slug",
      "description": "Retrieve a single published post by its slug",
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Post slug"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "slug": { "type": "string", "example": "my-first-post" },
              "title": { "type": "string", "example": "My First Post" },
              "content": { "type": "string", "example": "Full content..." },
              "description": { "type": "string", "nullable": true },
              "spot": { "type": "string", "nullable": true },
              "coverImage": { "type": "string", "nullable": true },
              "readCount": { "type": "integer" },
              "readTime": { "type": "integer" },
              "publishedAt": { "type": "string", "format": "date-time" },
              "updatedAt": { "type": "string", "format": "date-time" },
              "author": {
                "type": "object",
                "properties": {
                  "id": { "type": "integer" },
                  "name": { "type": "string" },
                  "avatar": { "type": "string", "nullable": true }
                }
              },
              "category": {
                "type": "object",
                "properties": {
                  "slug": { "type": "string" },
                  "name": { "type": "string" }
                }
              },
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": { "type": "string" },
                    "name": { "type": "string" }
                  }
                }
              }
            }
          }
        },
        "401": { "description": "Unauthorized" },
        "404": { "description": "Post not found" }
      }
    },
    {
      "path": "/posts/{slug}/view",
      "method": "POST",
      "tag": "Posts",
      "summary": "Track post view",
      "description": "Increment the view count for a post",
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Post slug"
        }
      ],
      "requestBody": {
        "required": true,
        "schema": {
          "type": "object",
          "properties": {
            "userAgent": {
              "type": "string",
              "required": true,
              "maxLength": 500,
              "example": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36",
              "description": "User agent of the viewer (frontend server's user agent header will be used for authentication, viewer's user agent sent in body)"
            }
          }
        }
      },
      "responses": {
        "204": { "description": "View tracked successfully (no content)" },
        "401": { "description": "Unauthorized" },
        "404": { "description": "Post not found" }
      }
    },
    {
      "path": "/categories",
      "method": "GET",
      "tag": "Categories",
      "summary": "List all categories",
      "description": "Retrieve all categories with post counts",
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "categories": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": { "type": "string", "example": "technology" },
                    "name": { "type": "string", "example": "Technology" },
                    "description": {
                      "type": "string",
                      "nullable": true,
                      "example": "Tech-related posts"
                    },
                    "spot": {
                      "type": "string",
                      "nullable": true,
                      "example": "Latest in tech"
                    },
                    "postCount": { "type": "integer", "example": 25 }
                  }
                }
              }
            }
          }
        },
        "401": { "description": "Unauthorized" }
      }
    },
    {
      "path": "/categories/{slug}",
      "method": "GET",
      "tag": "Categories",
      "summary": "Get category by slug",
      "description": "Retrieve a single category by its slug",
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Category slug"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "slug": { "type": "string" },
              "name": { "type": "string" },
              "description": { "type": "string", "nullable": true },
              "spot": { "type": "string", "nullable": true },
              "postCount": { "type": "integer" }
            }
          }
        },
        "401": { "description": "Unauthorized" },
        "404": { "description": "Category not found" }
      }
    },
    {
      "path": "/tags",
      "method": "GET",
      "tag": "Tags",
      "summary": "List all tags",
      "description": "Retrieve all tags with post counts",
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "tags": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "slug": { "type": "string", "example": "go" },
                    "name": { "type": "string", "example": "Go" },
                    "postCount": { "type": "integer", "example": 12 }
                  }
                }
              }
            }
          }
        },
        "401": { "description": "Unauthorized" }
      }
    },
    {
      "path": "/tags/{slug}",
      "method": "GET",
      "tag": "Tags",
      "summary": "Get tag by slug",
      "description": "Retrieve a single tag by its slug",
      "parameters": [
        {
          "name": "slug",
          "in": "path",
          "type": "string",
          "required": true,
          "description": "Tag slug"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "slug": { "type": "string" },
              "name": { "type": "string" },
              "postCount": { "type": "integer" }
            }
          }
        },
        "401": { "description": "Unauthorized" },
        "404": { "description": "Tag not found" }
      }
    },
    {
      "path": "/authors",
      "method": "GET",
      "tag": "Authors",
      "summary": "List all authors",
      "description": "Retrieve all authors with published posts",
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "authors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": { "type": "integer", "example": 1 },
                    "name": { "type": "string", "example": "John Doe" },
                    "avatar": {
                      "type": "string",
                      "nullable": true,
                      "example": "/uploads/avatar/1_abc123"
                    },
                    "publishedPostCount": { "type": "integer", "example": 15 },
                    "memberSince": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2023-06-01T00:00:00Z"
                    }
                  }
                }
              }
            }
          }
        },
        "401": { "description": "Unauthorized" }
      }
    },
    {
      "path": "/authors/{id}",
      "method": "GET",
      "tag": "Authors",
      "summary": "Get author by ID",
      "description": "Retrieve a single author by their ID",
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "type": "integer",
          "required": true,
          "description": "Author ID"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response",
          "schema": {
            "type": "object",
            "properties": {
              "id": { "type": "integer" },
              "name": { "type": "string" },
              "avatar": { "type": "string", "nullable": true },
              "publishedPostCount": { "type": "integer" },
              "memberSince": { "type": "string", "format": "date-time" }
            }
          }
        },
        "401": { "description": "Unauthorized" },
        "404": { "description": "Author not found" }
      }
    },
    {
      "path": "/key-values",
      "method": "GET",
      "tag": "Key-Values",
      "summary": "Get key-value pairs",
      "description": "Retrieve key-value configuration pairs. Returns all pairs by default, or filter by specific key or prefix.",
      "parameters": [
        {
          "name": "key",
          "in": "query",
          "type": "string",
          "required": false,
          "description": "Get a specific key-value pair by exact key match"
        },
        {
          "name": "starting",
          "in": "query",
          "type": "string",
          "required": false,
          "description": "Get all key-value pairs where key starts with this prefix"
        }
      ],
      "responses": {
        "200": {
          "description": "Successful response - returns an array of key-value objects",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "key": { "type": "string", "example": "site_name" },
                "value": { "type": "string", "example": "My Awesome Blog" }
              }
            },
            "example": [
              { "key": "site_name", "value": "My Awesome Blog" },
              { "key": "site_description", "value": "A blog about tech" },
              { "key": "contact_email", "value": "hello@example.com" }
            ]
          }
        },
        "401": { "description": "Unauthorized" }
      }
    }
  ]
}
